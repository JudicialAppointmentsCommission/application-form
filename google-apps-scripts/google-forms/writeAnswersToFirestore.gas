function onSubmit(e) {
  const form = FormApp.getActiveForm();
  const responses = { title: form.getTitle() };

  const itemResponses = e.response.getItemResponses();

  itemResponses.forEach(function (itemResponse) {
    const responseTitle = itemResponse.getItem().getTitle();
    const responseValue = itemResponse.getResponse();

    // Adjust the regex as the circumstances dictate. This is sufficient for this iteration.
    if (/unique.reference.number/i.test(responseTitle)) {
      responses.userId = responseValue;
    } else {
      responses[responseTitle] = responseValue;
    }
  });

  const options = {
    'method' : 'post',
    'contentType': 'application/json',
    'payload' : JSON.stringify(responses)
  };

  try {
    // Hardcoding the endpoint for now as that is MVP for this iteration.  Will revisit and refactor in future iterations.
    UrlFetchApp.fetch('https://us-central1-application-form-e08c9.cloudfunctions.net/qtSubmissions', options);
    console.info({ recordWrittenFor: responses.userId });
  } catch(e) {
    // Log bad users only, do not raise and exception.
    if (e.message.match('returned code 400')) {
      console.warn(JSON.stringify({ badUserID: responses }, null, 2));
    } else {
      throw e;
    }
  }
}

